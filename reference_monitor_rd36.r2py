TYPE="type"
ARGS="args"
RETURN="return"
EXCP="exceptions"
TARGET="target"
FUNC="func"
OBJC="objc"

class ABFile():
  def __init__(self,filename,create):
    # globals
    mycontext['debug'] = False   
    # local (per object) reference to the underlying file
    self.Afn = filename+'.a'
    self.Bfn = filename+'.b'

    # make the files and add 'SE' to the readat file...
    if create:
        self.Afile = openfile(self.Afn,create)
        self.Bfile = openfile(self.Bfn,create)
        try:
            self.Afile.readat(1,1)
        except:
            self.Afile.writeat('SE',0)
    else:
        self.Afile = openfile(self.Afn,create)
        self.Bfile = openfile(self.Bfn,create)


  def writeat(self,data,offset):
    
    # Write the requested data to the B file using the sandbox's writeat call
    firstChar = data[0]
    lastChar = data[len(data)-1]
    if firstChar == 'S' and lastChar == 'E':
        self.Bfile.writeat(data,offset)
  
  def readat(self,bytes,offset):
    # Read from the A file using the sandbox's readat...
    return self.Afile.readat(bytes,offset)

  def close(self):
    if self.Bfile.readat(1,0) == 'S':
        string=""
        try:
            i=0;
            while(1):
                string+=self.Bfile.readat(1,i)
                i = i+1
        except SeekPastEndOfFileError:
            lastchar = self.Bfile.readat(1,i-2)
        if lastchar == 'E':
            self.Afile.writeat(string,0)
    else:
        self.Bfile.writeat("SE",0)
    self.Afile.close()
    self.Bfile.close()


def ABopenfile(filename, create):
  return ABFile(filename,create)




# The code here sets up type checking and variable hiding for you.  You
# should not need to change anything below here.
sec_file_def = {"obj-type":ABFile,
                "name":"ABFile",
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":ABFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":ABFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":ABFile.close}
           }

CHILD_CONTEXT_DEF["ABopenfile"] = {TYPE:OBJC,ARGS:(str,bool),EXCP:Exception,RETURN:sec_file_def,TARGET:ABopenfile}

# Execute the user code
secure_dispatch_module()
